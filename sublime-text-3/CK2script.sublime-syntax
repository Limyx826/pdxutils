%YAML 1.2
---
name: CK2script
file_extensions:
  - gfx
  - gui
scope: source.ck2script
first_line_match: -\*- ck2(\.\w[\w\.]*)? -\*-

variables:
  vOpBool: |-
    (?xi:
      N?AND
    | NO(?:T|R)
    | OR
    | calc_true_if
    )
  vLiteralBool: '(?:yes|no)'
  vLiteralNull: '(?:none|0)'
  vLiteralInt: '(?:[-]?\d+)'
  vLiteralDecimal: '(?x: [-]? (?: \d* \. \d+ ) | (?: \d+ \. \d*) )'
  vLiteralTier: |-
    (?xi:
      BARON
    | COUNT
    | DUKE
    | KING
    | EMPEROR
    )
  vID: |-
    (?x: [a-zA-Z0-9_-]+ )
  vStrictID: |-
    (?x: [a-zA-Z_] [a-zA-Z0-9_-]* )
  vTextID: |-
    (?x: [^\s";]+ )
  vTitleID: |-
    (?x: [bcdek] _ [a-zA-Z] [a-zA-Z_-]* )
  vEventTarget: |-
    (?x: event_target : {{vStrictID}} )
  vLangTarget: |-
    (?xi:
      (?:ROOT (?: _ (?:FROM){1,4} )? )
    | (?:FROM){1,4}
    | (?:PREV){1,4}
    | THIS
    )
  vTarget: '(?x: {{vLangTarget}} | {{vEventTarget}} )'
  vFlagType: |-
    (?x:
      character
    | province
    | title
    | global
    | artifact
    | dynasty
    )
  vEventModifierType: |-
    (?x:
      character
    | province
    | holding
    )
  vCharEventType: |-
    (?x:
      character_event
    | long_character_event
    | narrative_event
    | letter_event
    | diploresponse_event
    | society_quest_event
    )
  vCharAttr: |-
    (?x:
      diplomacy
    | martial
    | stewardship
    | intrigue
    | learning
    )
  vCharEventPreTriggerBool: |-
    (?x:
      ai
    | capable_only
    | friends
    | is_
      (?:
        in_society
      | married
      | part_of_plot
      | patrician
      | sick
      )
    | only_
      (?:
        capable
      | independent
      | playable
      | rulers
      | men
      | women
      )
    | rivals
    | war
    )
  vCharEventPreTriggerInt: '(?x: m(?:in|ax) _age )'
  vCharEventPropertyBool: |-
    (?x:
      hide_
        (?:
          from
        | new
        | window
        )
    | is_
      (?:
        triggered_only
      | friendly
      | hostile
      )
    | major
    | notification
    | show_
      (?:
        root
      | from_from (?:_from)?
      )
    | triggered_from_code
    )
  vTriggerInt: |-
    (?x:
      num_fitting_characters_for_title
    | num_of_
          (?: (?: baron | count | duke | king | emperor )? _titles )
      | ( buildings
        | children
        | claims
        | consorts
        | count_titles_in_realm
        | dynasty_members
        | empty_holdings
        | extra_landed_titles
        | feuds
        | friends
        | holy_sites
        | lovers
        | (?: (?: max_ )? settlements )
        | plot_backers
        | prisoners
        | rivals
        | (?: subrealm_ (?: castles | cities ) )
        | spouses
        | trade_posts 
        | traits
        | (?: (?: unique_dynasty_ )? vassals )
        )
    | among_most_powerful_vassals
    )
  vTriggerTarget: |-
    (?x:
      is_ (?x: allowed | preferred) _holding_type
    | is_married
    | can_marry
    )
  vTriggerBool: |-
    (?x:
      in_command
    | is_married
    | war
    )

contexts:
  main:
    - match: '#.*'
      scope: comment.line.number-sign.ck2script
    - match: '"'
      scope: punctuation.definition.string.begin.ck2script
      push:
        - meta_scope: string.quoted.double.ck2script
        - match: '"'
          scope: punctuation.definition.string.end.ck2script
          pop: true
        - match: \n
          scope: invalid.illegal.newline.ck2script
        - match: \\.
          scope: invalid.illegal.escape.ck2script
    - match: \{
      push: braces
    - match: \}
      scope: invalid.illegal.stray-bracket-end
    - match: \b(id)\s*=\s*(((\w+)\.)?(0|([1-9][0-9]*)))\b
      captures:
        1: keyword.control.ck2script
        2: entity.function.name
        # 4: some scope for namespaces or identifiers (entity.name... ?)
        5: constant.numeric.integer.ck2script
    - match: (?<!\w)(\-?([0-9]+\.)?[0-9]+)\b
      scope: constant.numeric.ck2script
    - match: '\b{{vTitleID}}\b'
      scope: variable.other.ck2script
    - match: \bc_\d+\b # character scope, not a title; integer is character ID
      scope: variable.other.ck2script
    - match: '\b(clear(?:_global)?_event_target|save(?:_global)?_event_target_as)\s*=\s*({{vStrictID}})\b'
      captures:
        1: keyword.control.ck2script
        2: variable.other.ck2script
    - match: '\b{{vEventTarget}}\b'
      scope: variable.other.ck2script
    - match: '\b((?:(?:has|remove)_{{vEventModifierType}}_modifier)|(?:add_|remove_)?trait|flag|war_name|name|give_nickname|has_nickname|modifier|has_any_opinion_modifier|has_(?:minor|job)_title|has_plot|in_faction|leads_faction|has_law|add_law|add_law_w_cooldown|pass_law|is_(?:law|decision|government)_(?:allowed|potential))\s*=\s*(\w+)\b'
      captures:
        1: keyword.control.ck2script
        2: variable.identifier.ck2script
    - match: '\b((?:set|clr|has)_{{vFlagType}}_flag)\s*=\s*(\w+)\b'
      captures:
        1: keyword.control.ck2script
        2: variable.identifier.ck2script
    - match: '\bhad_({{vFlagType}})_flag\b'
      scope: keyword.control.ck2script
    - match: '\b{{vLangTarget}}\b'
      scope: variable.language.ck2script
    - match: '\b{{vOpBool}}\b'
      scope: keyword.operator.logical.ck2script keyword.operator.word.ck2script
    - match: '\b{{vLiteralTier}}\b'
      scope: support.constant.tier.ck2script
    - match: '\b({{vLiteralBool}}|{{vLiteralNull}})\b'
      scope: constant.language.ck2script
    - match: \b((mult_)?modifier|modifier|additive_modifier|additive_power_diff_modifier|additive_opinion_modifier)\b
      scope: keyword.control.ck2script
    - match: \b(sprite|truce_days|is_permanent|check_all_titles|check_de_jure_tier|hostile_against_others|attacker_can_call_allies|defender_can_call_allies|can_ask_to_join_war|apply_short_occ_mod|press_claim|battle_warscore_mult|infamy_modifier|can_call_vassals|major_revolt|is_holy_war|allowed_to_target_tributaries|allowed_to_target_suzerains|ticking_war_score_multiplier|allow_distant|is_claim_all|is_independence|is_(?:tyranny|revolt)_cb)\b
      scope: keyword.control.ck2script
    - match: \b(tooltip|hidden_tooltip|custom_tooltip|hidden_trigger|hidden_effect)\b
      scope: keyword.control.ck2script
    - match: \b(if|trigger_switch|limit|on_trigger|while|break)\b
      scope: keyword.control.ck2script
      # types of "events" (repeat_event is strictly a command and not also an actual event type)
    - match: \b((character|long_character|narrative|letter|diploresponse|province|unit|repeat|society_quest)_event)\b
      scope: keyword.control.ck2script
      # top-level event context flags/paramters:
    - match: \b(((show_(ROOT|root))|(hide_(window|from|FROM|new))|(show(_from|_FROM){2,4})))\b
      scope: keyword.control.ck2script
    - match: \b(is_triggered_only|major|desc|is_friendly|picture|border|title|notification)\b
      scope: keyword.control.ck2script
      # event pre-triggers
    - match: \b(only_(independent|playable|rulers|capable|men|women)|capable_only|is_patrician|ai|war|is_married|has_character_flag|has_global_flag|has_flag)\b
      scope: keyword.control.ck2script
    - match: \b(friends|rivals|has_dlc|lacks_dlc|is_part_of_plot|is_in_society|prisoner|min_age|max_age|religion|religion_group|culture|culture_group)\b
      scope: keyword.control.ck2script
      # top-level event effect blocks
    - match: \b(immediate|option|after)\b
      scope: keyword.control.ck2script
      # general common triggers & effects
    - match: '\b({{vTriggerInt}})\s*=\s*({{vLiteralInt}})\b'
      captures:
        1: support.function.ck2script
        2: constant.numeric.integer.ck2script
    - match: '\b({{vTriggerTarget}})\s*=\s*({{vTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.language.ck2script
    - match: \b(is_republic|is_merchant_republic|is_tribal|is_nomadic|is_feudal|is_theocracy|mercenary|holy_order|rebel|temporary|clan|adventurer|is_primary_type_title|is_landless_type_title|controls_religion)\b
      scope: keyword.control.ck2script
    - match: \b((is_primary_holder_title(_tier)?)|tier|real_tier|lower_tier_than|lower_real_tier_than|higher_tier_than|higher_real_tier_than|is_titular|is_de_jure_title|de_facto_liege|de_facto_liege_title)\b
      scope: keyword.control.ck2script
    - match: \b(character|title|province|province_id|dynasty|region|de_jure_liege|de_jure_liege_or_above|de_jure_vassal_or_below|has_landed_title|holder|always|is_liege_or_above|is_vassal_or_below|is_liege_of|vassal_of|same_realm|same_liege)\b
      scope: keyword.control.ck2script
    - match: \b(has_(strong_|weak_)?claim|claimed_by|has_holder|has_owner|((reverse_)?(remove_)?opinion)|((reverse_)?has_opinion_modifier)|independent|is_landed|has_regent|is_adult|is_playable|is_ruler|is_female|is_incapable)\b
      scope: keyword.control.ck2script
    - match: \b(is_land|conquest_culture|((reverse_)?realm_levy_diff)|trait|(is_primary_war_(defender|attacker))|war_with|is_tributary|pays_tribute_to|create_(title|character|artifact|(random_(soldier|priest|steward|diplomat|intriguer)))|has_law|is_allied_with|sibling|num_of_holy_sites)\b
      scope: keyword.control.ck2script
    - match: \b(using_cb|((check|change|subtract|multiply|divide|export_to|set)_variable)|is_variable_equal|is_dying|is_alive|wealth|prestige|piety|diplomacy|martial|stewardship|intrigue|learning|attribute_diff|age_diff|health|base_health|can_marry|has_inheritance_blocker)\b
      scope: keyword.control.ck2script
    - match: \b(realm_size|ruled_years|in_revolt|can_hold_title|holding_type|government|(num_of_(realm_counties|settlements|buildings|baron_titles|count_titles|count_titles_in_realm|duke_titles|king_titles|emperor_titles|children|claims|consorts|dynasty_members|faction_backers|lovers|max_settlements|friends|plot_backers|prisoners|rivals|titles|trade_posts|trade_post_diff|traits|unique_dynasty_vassals|vassals)))\b
      scope: keyword.control.ck2script
    - match: \b(add_(character|province|holding)_modifier|has_game_rule|has_game_started|is_father_real_father|is_father|is_mother|is_child_of||is_pregnant|is_married|is_consort|is_lover|age|is_adult|is_incapable|is_marriage_adult|has_(job|minor)_title|is_close_relative|pays_tribute_to|month_of_birth|day_of_birth|artifact_type|secret_religion(_group)?|true_religion(_group)?|religion(_group)?|conquest_culture|culture(_group)?|is_within_diplo_range|is_friend|is_rival|is_foe|is_guardian)\b
      scope: keyword.control.ck2script
    - match: \b(is_ill|has_(any_)?building|has_focus|has_ambition|has_autocephaly|religion_allows_female_temple_holders|has_raised_standing_troops|has_(earmarked_)?regiments|has_secret_religion|is_vice_royalty|holds_favor_on|owes_favor_to|relative_income_to_liege|relative_power|faction_power|among_most_powerful_vassals|relative_power_to_liege|(scaled_)?wealth|has_trade_post|has_owner|has_holder|port|borders_major_river|borders_lake|terrain)\b
      scope: keyword.control.ck2script
    - match: \b(society_rank|is_quest_target|has_quest|rank|society|has_(any_)?building|in_command|is_attacker|war|plot_power|can_swap_job_title|death_reason|killer|is_councillor|has_disease|is_occupied|distance|is_heretic|is_allowed_to_loot|combat_rating|)\b
      scope: keyword.control.ck2script
      # these ones are actually scripted triggers from HIP/EMF core code (all scripted triggers should get a diff color too -- which means re-parsing the scripted triggers folder on the VFS regularly):
    - match: \b(((owner_)?under_((FROM){1,2}|ROOT|(PREV){1,3}))|is_de_jure_title|best_de_jure_liege_title_(under|holder)_(ROOT|FROM|target_ruler))\b
      scope: keyword.control.ck2script
      # general scopes ( ideally would be a different color )
    - match: \b(dejure_liege_title|defacto_liege_title|rightful_religious_head_scope|religion_head|primary_title|succ_law_title|crownlaw_title|current_heir|supported_claimant|supported_claimant_title|capital_scope|capital_holding)\b
      scope: keyword.control.ck2script
    - match: \b(owner|ruler|holder_scope|top_liege|liege_before_war|((father|mother)(_even_if_dead)?)|attacker|defender|location|new_(character|artifact|title)|county|duchy|kingdom|empire|clan_title|family_palace|most_prestigious_clan_vassal|strongest_clan_vassal|most_popular_vassal)\b
      scope: keyword.control.ck2script
    - match: \b((any_(direct_)?de_jure_vassal_title)|(any_de_jure_liege_title)|((any|random)_(demesne|realm)_(title|province))|((any|random)_province_holding)|((any|random)_neighbor_province))\b
      scope: keyword.control.ck2script
    - match: \b(suzerain|attacker|defender|band_creator|best_crusade_claimant|biggest_realm_size_relative|(left|center|right)_flank_leader|controller|dynasty_head|educator|employer|liege|enemy|father_of_unborn|guardian|heir_under_(seniority|primogeniture)_law|highest_ranked_relative|host|killer|liege_before_war|lover|mercenary_employer|most_participating_(attacker|crusader|defender)|parent_religion_head|plot_target_char|preferred_war_target|real_father(_even_if_dead)?|reincarnation_scope|regent|spouse(_even_if_dead)?|top_liege|trade_post_owner|job_(chancellor|marshal|treasurer|spymaster|spiritual)|title_to_get_rid_of)\b
      scope: keyword.control.ck2script
    - match: \b(blood_brother|crusade_target|invasion_target|plot_target_title|realm|thirdparty_title_scope|plot_target_province|sea_zone|siege|quest_target)\b
      scope: keyword.control.ck2script
      # these scopes all have any & random versions
    - match: \b(((any|random)_(artifact|player|character|rival|consort|trade_post|friend|voter|ward|opinion_modifier_target|non_aggression_pact_character|lover|((un)?known_)?enemy_plotter|close_relative|backed_character|landed_title|claim|potential_tribal_county|(neighbor_)?province))|((any|random)_(child|spouse|sibling|dynasty_member)(_even_if_dead)?))\b
      scope: keyword.control.ck2script
      # these scopes all have any & random versions -- unit scopes
    - match: \b(any|random)_(army|fleet|unit)\b
      scope: keyword.control.ck2script
      # these scopes only have any_ versions (no random_); might want to have a slightly different saturation or something for these when highlighting, kinda like the multi-scopes that exclude ROOT
    - match: \bany_(war|claimant|attacker|defender|de_jure_vassal|faction_backer|favor_(holder|ower)|known_plotter|liege|plot_backer|plotter|previous_holder|suzerain|unique_dynasty_vassal|title|heir_title|mercenary_band|pretender_title|trade_route_province)\b
      scope: keyword.control.ck2script
      # scopes that exclude ROOT
    - match: \b((any|random)_province_(character|lord)|((any|random)_courtier(_or_vassal)?)|(any|random)_host_courtier|((any|random)_realm_(lord|character))|(any|random)_current_enemy|(any|random)_vassal|(any|random)_dynasty_member|(any|random)_(independent|playable)_ruler)\b
      scope: keyword.control.ck2script
      # these are the names of parameters for numerous triggers & effects which have multiple named parameters possible
    - match: \b(target|type|target_type|who|where|which|amount|value|count|percentage|duration|days|months|years|hidden|inherit|crime|disable_non_aggression_pacts|move|cooldown|count|tooltip|random|chance|factor|casus_belli|tier|thirdparty_title|infamy|as_if_liege|first|second|enemy|title|is_religious|same_religion|is_crusade|to|min|max|multiplier)\b
      scope: keyword.control.ck2script
      # top-level event trigger blocks
    - match: \b(trigger|major_trigger)\b
      scope: keyword.control.ck2script
      # LANDED_TITLES
    - match: \b(color2?|((graphical_)?culture)|religion|capital|foa|(title(_female)?)|dynasty_title_names|short_name|name_tier|landless|primary|dignity|caliphate|creation_requires_capital)\b
      scope: keyword.control.ck2script
    - match: \b(monthly_income|coat_of_arms|data|mercenary_type|assimilate|((fe)?male_names)|allow|gain_effect|mercenary|independent|title_prefix)\b
      scope: keyword.control.ck2script
      # CUSTOMIZABLE_LOCALISATION
    - match: \b(defined_text|text|localisation_key)\b
      scope: keyword.control.ck2script
      # FUTURE DECISION/LAW CONTEXT:
    - match: \b(decisions|title_decisions|settlement_decisions|targett?ed_decisions|plot_decisions|society_decisions)\b # top-level
      scope: keyword.control.ck2script
    - match: \b(allow|potential|from_potential|revoke_allowed)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(effect|pass_effect)\b # effects
      scope: keyword.control.ck2script
    - match: \b(ai_will_do|ai_will_revoke)\b # modifier sets
      scope: keyword.control.ck2script
      # FUTURE MINOR TITLE / RELIGIOUS TITLE CONTEXT:
    - match: \b(allowed_to_grant|allowed_to_hold|revoke_trigger)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(gain_effect|lose_effect|retire_effect)\b # effects
      scope: keyword.control.ck2script
    - match: \bai_will_do\b # modifier sets
      scope: keyword.control.ck2script
      # FUTURE JOB TITLE CONTEXT:
    - match: \b(allow|dismiss_trigger)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(gain_effect|lose_effect|retire_effect)\b # effects
      scope: keyword.control.ck2script
      # FUTURE CB CONTEXT:
    - match: \b((can_use(_(title|gui))?)|(is_valid(_title)?))\b
      scope: keyword.control.ck2script
    - match: \b((on_(add|success|fail|reverse_demand)(_(title|posttitle))?)|on_invalidation|on_(attacker|defender)_leader_death)\b # effects
      scope: keyword.control.ck2script
    - match: \b(((attacker|defender)_ai_(victory|defeat)_worth)|ai_will_do)\b # modifier sets
      scope: keyword.control.ck2script
      # TODO: FUTURE CONTEXT OF JOB ACTIONS, AMBITIONS, PLOTS, FOCUSES, FACTIONS, LANDED_TITLES, COUNCIL_VOTING, TRAITS,
      #       COUNCIL_POSITIONS, GOVERNMENTS, ([LONG_]CHARACTER|LETTER|NARRATIVE|PROVINCE|UNIT|DIPLORESPONSE)_EVENT, ...
      # random stuff not covered above [yet]:
    - match: \b(mean_time_to_happen|weight_multiplier|chance|membership|ai_chance)\b # modifier sets
      scope: keyword.control.ck2script
    - match: \b(random|random_list)\b # effects w/ modifier sets
      scope: keyword.control.ck2script

  braces:
    - match: \}
      pop: true
    - include: main
