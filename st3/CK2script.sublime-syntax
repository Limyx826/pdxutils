%YAML 1.2
---
name: CK2script
file_extensions:
  - gfx
  - gui
scope: source.ck2script
first_line_match: -\*- ck2(\.\w[\w\.]*)? -\*-

variables:
  vOpBool: |-
    (?xi:
      N?AND
    | NO(?:T|R)
    | OR
    | calc_true_if
    )
  vOpBinary: '(?x: ==? | >=? | <=? )'
  vLiteralBool: '(?:yes|no)'
  vLiteralMisc: '(?:none|public|true|secret|random|actually_culture|culture)'
  vLiteralInt: '(?:[-]?\d+)'
  vLiteralDecimal: '(?x: [-]? (?: (?: \d* \. \d+ ) | (?: \d+ \. \d*) | \d+ ) )'
  vLiteralDate: '(?x: [-]? \d{1,4}} \. [-]? \d{1,2} \. [-]? \d{1,2} )'
  vLiteralTier: |-
    (?xi:
      BARON
    | COUNT
    | DUKE
    | KING
    | EMPEROR
    )
  vLiteralHoldingType: |-
    (?xi:
      CASTLE
    | TEMPLE
    | CITY
    | TRIBAL
    | NOMAD
    | FAMILY_PALACE
    | TRADE_POST
    | HOSPITAL
    )
  vID: |-
    (?x: [a-zA-Z0-9_-]+ )
  vStrictID: |-
    (?x: [a-zA-Z_] [a-zA-Z0-9_-]* )
  vTextID: |-
    (?x: [^\s";]+ )
  vTitleID: |-
    (?x: [bcdek] _ [a-zA-Z] [a-zA-Z0-9_-]* )
  vOffmapID: |-
    (?x: offmap _ [a-zA-Z] [a-zA-Z0-9_-]* )
  vEventTarget: |-
    (?x: event_target : {{vStrictID}} )
  vLangTarget: |-
    (?xi:
      (?:ROOT (?: _ (?:FROM){1,4} )? )
    | (?:FROM){1,4}
    | (?:PREV){1,4}
    | THIS
    )
  vLangRHSTarget: |-
    (?xi:
      {{vLangTarget}}
    | LIEGE
    | FATHER
    | MOTHER
    | SPOUSE
    | NEW
    )
  vFlagType: |-
    (?x:
      character
    | province
    | title
    | global
    | artifact
    | dynasty
    | offmap
    | offmap_tmp
    )
  vEventModifierType: |-
    (?x:
      character
    | province
    | holding
    )
  vCharEventType: |-
    (?x:
      character_event
    | long_character_event
    | narrative_event
    | letter_event
    | diploresponse_event
    | society_quest_event
    )
  vCharAttr: |-
    (?x:
      diplomacy
    | martial
    | stewardship
    | intrigue
    | learning
    )
  vCharEventPreTriggerBool: |-
    (?x:
      ai
    | capable_only
    | friends
    | is_
      (?:
        in_society
      | married
      | part_of_plot
      | patrician
      | sick
      )
    | only_
      (?:
        capable
      | independent
      | playable
      | rulers
      | men
      | women
      )
    | rivals
    | war
    )
  vCharEventPreTriggerInt: '(?x: m(?:in|ax) _age )'
  vCharEventPropertyBool: |-
    (?x:
      hide_
        (?:
          from
        | new
        | window
        )
    | is_
      (?:
        triggered_only
      | friendly
      | hostile
      )
    | major
    | notification
    | show_
      (?:
        root
      | from_from (?:_from)?
      )
    | triggered_from_code
    )
  vTargetedDecisionFilter: |-
    (?x:
      self
    | court(?:_including_me)?
    | home_court(?:_including_me)?
    | vassals
    | sub_realm(?:_including_me)?
    | realm(?:_including_me)?
    | dynasty(?:_including_me)?
    | spouse
    | liege
    | religious_head
    | rivals
    | society(?:_including_me)?
    | all(?:_including_me)?
    | none
    | vassal_wars
    | independent_rulers
    )
  vTitleDecisionFilter: |-
    (?x:
      capital
    | primary_title
    | owned
    | vassal_owned
    | sub_realm_owned
    | realm_owned
    | dynasty_owned
    | all
    )
  vSettlementDecisionFilter: |-
    (?x:
      capital
    | owned
    | vassal_owned
    | sub_realm_owned
    | realm_owned
    | dynasty_owned
    | all
    )
  vDecisionPropertyBool: |-
    (?x:
      is_high_prio
    | hide_in_decisions_list
    | is_mercenary
    )
  vDecisionPropertyInt: |-
    (?x:
      ai_check_interval
    )
  vTriggerDate: |-
    (?x:
        start_date
    )
  vTriggerTier: |-
    (?x:
      higher_real_tier_than
    | higher_tier_than
    | lower_real_tier_than
    | lower_tier_than
    | real_tier
    | tier
    )
  vTriggerInt: |-
    (?x:
      age
    | ai_ambition
    | ai_greed
    | ai_honor
    | ai_rationality
    | ai_zeal
    | among_most_powerful_vassals
    | character
    | combat_rating
    | day_of_birth
    | days_at_current_society_rank
    | days_in_society
    | decadence
    | demesne_size
    | dynasty
    | hospital_level
    | killer
    | month
    | month_of_birth
    | monthly_income
    | num_fitting_characters_for_title
    | num_of_baron_titles
    | num_of_baron_titles_in_realm
    | num_of_duke_titles
    | num_of_duke_titles_in_realm
    | num_of_emperor_titles
    | num_of_king_titles
    | num_of_king_titles_in_realm
    | num_of_buildings
    | num_of_children
    | num_of_claims
    | num_of_consorts
    | num_of_count_titles
    | num_of_count_titles_in_realm
    | num_of_demesne_castles
    | num_of_demesne_cities
    | num_of_demesne_empty_provinces
    | num_of_demesne_temples
    | num_of_demesne_tribes
    | num_of_dynasty_members
    | num_of_empty_holdings
    | num_of_extra_landed_titles
    | num_of_feuds
    | num_of_forts
    | num_of_friends
    | num_of_holy_sites
    | num_of_lovers
    | num_of_max_settlements
    | num_of_plot_backers
    | num_of_prisoners
    | num_of_rivals
    | num_of_settlements
    | num_of_spouses
    | num_of_subrealm_castles
    | num_of_subrealm_cities
    | num_of_subrealm_empty_provinces
    | num_of_subrealm_temples
    | num_of_subrealm_tribes
    | num_of_symptoms
    | num_of_titles
    | num_of_titles_in_realm
    | num_of_trade_posts
    | num_of_traits
    | num_of_unique_dynasty_vassals
    | num_of_vassals
    | piety
    | population
    | prestige
    | province_id
    | realm_size
    | ruled_years
    | society_rank
    | total_years_played
    | war_score
    | wealth
    | year
    | yearly_income
    | {{vCharAttr}}
    | artifact_age
    )
  vTriggerDecimal: |-
    (?x:
      base_health
    | demesne_efficiency
    | demesne_size_compared_to_limit
    | health
    | relative_income_to_liege
    | relative_power
    | relative_power_to_liege
    | religion_authority
    | revolt_risk
    | scaled_piety
    | scaled_prestige
    | scaled_wealth
    | dynasty_realm_power
    | population_factor
    | society_currency
    )
  vTriggerTitleID: |-
    (?x:
      completely_controls
    | de_facto_liege
    | de_facto_liege_title
    | de_jure_liege_or_above
    | de_jure_liege
    | de_jure_vassal_or_below
    | government
    | has_claim
    | has_landed_title
    | is_landed_title_allowed
    | is_title_active
    | title
    )
  vTriggerOffmapID: |-
    (?x:
        has_offmap_news_enabled
    |   is_offmap_tag
    |   government
    )
  vTriggerTarget: |-
    (?x:
      can_marry
    | character
    | claimed_by
    | completely_controls
    | conquest_culture
    | culture
    | culture_group
    | de_facto_liege
    | de_facto_liege_title
    | de_jure_liege
    | de_jure_liege_or_above
    | de_jure_vassal_or_below
    | dynasty
    | excommunicated_for
    | family
    | government
    | has_blood_oath_with
    | has_claim
    | has_embargo
    | has_feud_with
    | has_landed_title
    | has_non_aggression_pact_with
    | has_offmap_news_enabled
    | has_raised_levies
    | has_truce
    | has_strong_claim
    | has_weak_claim
    | held_title_rating
    | higher_real_tier_than
    | higher_tier_than
    | holder
    | is_allied_with
    | is_allowed_holding_type
    | is_ancestor_of
    | is_aunt_uncle_of
    | is_capital
    | is_child_of
    | is_close_relative
    | is_consort
    | is_cousin_of
    | is_descendant_of
    | is_father
    | is_foe
    | is_former_lover
    | is_friend
    | is_grandchild_of
    | is_grandparent_of
    | is_heresy_of
    | is_holy_site
    | is_landed_title_allowed
    | is_liege_of
    | is_liege_or_above
    | is_lover
    | is_married
    | is_mother
    | is_nibling_of
    | is_older_than
    | is_opposite_sex
    | is_parent_of
    | is_parent_religion
    | is_plot_target_of
    | is_preferred_holding_type
    | is_primary_heir
    | is_quest_target_of
    | is_reformed_religion
    | is_rival
    | is_title_active
    | is_valid_viking_invasion_target
    | is_vassal_or_below
    | liege_or_above_of
    | vassal_or_below_of
    | is_within_diplo_range
    | lower_real_tier_than
    | lower_tier_than
    | overlord_of
    | pays_tribute_to
    | plot_is_known_by
    | province
    | province_id
    | real_tier
    | religion
    | religion_group
    | reverse_has_truce
    | rightful_religious_head
    | same_liege
    | same_realm
    | same_sex
    | same_society_as
    | secret_religion
    | secret_religion_group
    | set_name
    | shares_realm_border_with
    | sibling
    | tier
    | title
    | true_religion
    | true_religion_group
    | vassal_of
    | war_title
    | war_with
    )
  vTriggerBool: |-
    (?x:
      adventurer
    | ai
    | always
    | best_de_jure_liege_title_holder_FROM
    | best_de_jure_liege_title_holder_ROOT
    | best_de_jure_liege_title_holder_target_ruler
    | best_de_jure_liege_title_under_FROM
    | best_de_jure_liege_title_under_ROOT
    | best_de_jure_liege_title_under_target_ruler
    | borders_major_river
    | borders_lake
    | can_be_given_away
    | can_call_crusade
    | can_change_religion
    | can_marry
    | controls_religion
    | clan
    | flank_has_leader
    | has_autocephaly
    | has_called_crusade
    | has_concubinage
    | has_empty_holding
    | has_epidemic
    | has_fort
    | has_game_started
    | has_guardian
    | has_holder
    | has_horde_culture
    | has_hospital
    | has_inheritance_blocker
    | has_job_title
    | has_known_creation_date
    | has_lover
    | has_mercenary_band
    | has_nickname
    | has_owner
    | has_polygamy
    | has_raised_standing_troops
    | has_regent
    | has_secret_religion
    | has_settlement_construction
    | has_siege
    | has_trade_post
    | holy_order
    | immortal
    | in_command
    | in_revolt
    | in_seclusion
    | independent
    | is_adult
    | is_alive
    | is_allowed_to_loot
    | is_attacker
    | is_capital
    | is_consort
    | is_contested
    | is_conquered
    | is_councillor
    | is_de_jure_title
    | is_dying
    | is_father_real_father
    | is_female
    | is_feudal
    | is_flanking
    | is_heir
    | is_heretic
    | is_incapable
    | is_ill
    | is_in_society
    | is_island
    | is_land
    | is_landed
    | is_landless_type_title
    | is_lowborn
    | is_marriage_adult
    | is_married
    | is_married_matrilineally
    | is_merchant_republic
    | is_multiplayer_host_character
    | is_nomadic
    | is_occupied
    | is_offmap_governor
    | is_offmap_ruler  # this one is somewhat questionable?
    | is_patrician
    | is_pregnant
    | is_priest
    | is_primary_heir
    | is_primary_holder_title
    | is_primary_holder_title_tier
    | is_primary_type_title
    | is_primary_war_attacker
    | is_primary_war_defender
    | is_primary_war_participant
    | is_pregnant
    | is_pretender
    | is_playable
    | is_plot_active
    | is_recent_grant
    | is_reformed_religion
    | is_republic
    | is_ruler
    | is_save_game
    | is_seafarer
    | is_society_grandmaster
    | is_theocracy
    | is_titular
    | is_titular_title
    | is_tribal
    | is_tribal_type_title
    | is_tributary
    | is_vice_royalty
    | is_voter
    | is_virtous # yes, the trigger is misspelled in the API
    | mercenary
    | multiplayer
    | owner_under_FROM
    | owner_under_FROMFROM
    | owner_under_FROMFROMFROM
    | owner_under_PREV
    | owner_under_PREVPREV
    | owner_under_PREVPREVPREV
    | owner_under_ROOT
    | owner_under_target_ruler
    | pacifist
    | port
    | preparing_invasion
    | prisoner
    | rebel
    | religion_allows_female_temple_holders
    | risks_minor_clan_rising
    | society_can_rank_up
    | technology_can_spread
    | temporary
    | under_FROM
    | under_FROMFROM
    | under_FROMFROMFROM
    | under_PREV
    | under_PREVPREV
    | under_PREVPREVPREV
    | under_ROOT
    | under_target_ruler
    | uses_decadence
    | war
    | is_inaccessible_trigger
    | emf_hostile_religion_to_ROOT
    | emf_hostile_religion_to_FROM
    | emf_hostile_religion_to_PREV
    | emf_hostile_religion_to_target_ruler
    | emf_unreformed_pagan
    | emf_not_unreformed_pagan
    | emf_polytheist_religion
    | emf_feminist_religion
    | emf_western_christian_religion
    | emf_can_religion_excommunicate
    | emf_religion_head_divorce
    | emf_divine_blood_religion
    | emf_is_formidable_woman
    | emf_can_inherit
    | emf_is_voter
    | emf_can_convert_religion
    | emf_can_disturb
    | emf_ROOT_completely_controls_counties
    | emf_has_swmh
    | emf_not_has_swmh
    | emf_can_execute_ROOT
    | title_duke_basic_allow
    | title_tribe_basic_allow
    | title_king_basic_allow
    | title_emperor_basic_allow
    )
  vTriggerID: |-
    (?x:
      can_hold_title
    | completely_controls_region
    | continent
    | controls_religion
    | culture
    | culture_group
    | death_reason
    | disease
    | fort_has_building
    | fort_has_any_building
    | government
    | has_{{vEventModifierType}}_modifier
    | has_{{vFlagType}}_flag
    | has_ambition
    | has_any_building
    | has_any_opinion_modifier
    | has_artifact
    | has_assigned_minor_title
    | has_building
    | has_earmarked_regiments
    | has_focus
    | has_job_action
    | has_job_title
    | has_law
    | has_minor_title
    | has_nickname
    | has_offmap_name
    | has_plot
    | has_policy
    | has_quest
    | has_secret_religion
    | has_status
    | in_faction
    | is_decision_allowed
    | is_decision_potential
    | is_fort_decision_allowed
    | is_fort_decision_potential
    | is_government_allowed
    | is_government_potential
    | is_law_allowed
    | is_law_potential
    | is_settlement_decision_allowed
    | is_settlement_decision_potential
    | is_targetted_decision_allowed
    | is_targetted_decision_potential
    | is_title_decision_allowed
    | is_title_decision_potential
    | is_trade_post_decision_allowed
    | is_trade_post_decision_potential
    | leads_faction
    | phase
    | region
    | religion
    | religion_group
    | secret_religion
    | secret_religion_group
    | society_member_of
    | terrain
    | trade_post_has_building
    | trade_post_has_any_building
    | trade_route
    | trait
    | true_religion
    | true_religion_group
    | using_cb
    )
  vTriggerEffectQString: |-
    (?x:
        set_name
    )
  vEffectNumber: |-
    (?x:
      add_holding_slot
    | change_{{vCharAttr}}
    | change_society_currency
    | fertility
    | health
    | decadence
    | manpower
    | participation_scaled_decadence
    | participation_scaled_piety
    | participation_scaled_prestige
    | piety
    | prestige
    | scaled_piety
    | scaled_prestige
    | scaled_wealth
    | set_father
    | set_looter_hostility_days
    | set_mother
    | treasury
    | wealth
    )
  vEffectTarget: |-
    (?x:
      abdicate_to
    | abdicate_to_most_liked_by
    | add_claim
    | add_favor
    | add_friend
    | add_lover
    | add_pressed_claim
    | add_rival
    | add_spouse
    | add_weak_claim
    | add_weak_pressed_claim
    | banish
    | break_alliance
    | clear_wealth
    | conquest_culture
    | copy_title_history
    | copy_title_laws
    | de_jure_liege
    | destroy_landed_title
    | destroy_settlement
    | embargo
    | force_host
    | gain_title
    | grant_title
    | grant_title_no_opinion
    | impregnate
    | imprison
    | move_character
    | occupy_minors_of_occupied_settlements
    | press_claim
    | remove_claim
    | remove_consort
    | remove_favor
    | remove_friend
    | remove_lover
    | remove_spouse
    | remove_rival
    | remove_tributary
    | reveal_plot
    | reverse_add_favor
    | reverse_banish
    | reverse_remove_favor
    | seize_trade_post
    | set_defacto_liege
    | set_defacto_vassal
    | set_father
    | set_mother
    | set_offmap_holder
    | set_preferred_capital
    | set_secret_religion
    | unsafe_destroy_landed_title
    | unsafe_impregnate
    | usurp_title
    | usurp_title_only
    | usurp_title_plus_barony_if_unlanded
    | usurp_title_plus_barony_if_unlanded_and_vassals
    | usurp_title_plus_barony_if_unlanded_and_vassals_no_adj
    )
  vEffectBool: |-
    (?x:
      abdicate
    | ambition_succeeds
    | banish
    | cancel_ambition
    | clear_focus
    | clear_secret_religion
    | clear_wealth
    | cut_mercenary_creator_relation
    | death
    | diplomatic_immunity
    | destroy_landed_title
    | excommunicate
    | impregnate
    | make_capital_holding
    | plot_succeeds
    | refill_holding_levy
    | remove_guardian
    | reveal_plot
    | reveal_plot_w_message
    | revoke_capital_holding
    | set_can_toggle_looting
    | set_looting
    | unsafe_destroy_landed_title
    | unsafe_impregnate
    | emf_liege_change
    | emf_abdicate
    | emf_copy_title_state_from_PREV
    | emf_destroy_title
    | emf_unsafe_destroy_title
    | emf_ROOT_subjugate_ruler
    | emf_FROM_subjugate_ruler
    | emf_set_viceroy_exemption
    | pf_liege_change_under_title_begin_effect
    | pf_liege_change_under_title_end_effect
    )
  vEffectTitleID: |-
    (?x:
      add_claim
    | add_pressed_claim
    | add_weak_claim
    | add_weak_pressed_claim
    | de_jure_liege
    | remove_claim
    | set_defacto_liege
    )
  vEffectID: |-
    (?x:
      add_artifact
    | add_building
    | add_law
    | add_law_w_cooldown
    | add_trait
    | adjective
    | cancel_plot
    | clear_flags_with_prefix
    | clr_{{vFlagType}}_flag
    | clr_offmap_tmp_flag
    | culture
    | disband_event_forces
    | give_minor_title
    | give_nickname
    | pass_law
    | religion
    | remove_building
    | remove_{{vEventModifierType}}_modifier
    | remove_special_character_title
    | remove_title
    | remove_trait
    | set_focus
    | set_{{vFlagType}}_flag
    | set_offmap_tmp_flag
    | set_government_type
    | set_graphical_culture
    | set_policy
    | set_name
    | set_offmap_name
    | set_secret_religion
    | set_special_character_title
    | set_status
    | unsafe_destroy_artifact
    | unsafe_religion
    | unsafe_give_minor_title
    )
  vParamNumber: |-
    (?x:
      size
    | power
    | for_population
    | match_mult
    | match_min
    | match_max
    | scaled_by_biggest_garrison
    | strength_growth_per_century
    | hire_range
    | extra_ai_eval_troops
    | attrition
    | reinforce_rate_multiplier
    | maintenance_multiplier
    )
  vParamID: |-
    (?x:
      death_reason
    | flag
    | modifier
    | name
    | faction
    | border
    | picture
    | value
    | group
    | earmark
    | casus_belli
    | technology
    | law
    | tributary_type
    | graphical_culture
    | mercenary_type
    | society
    )
  vParamTextID: |-
    (?x:
      desc
    | name
    | text
    | title
    | title_female
    | title_prefix
    | foa
    | foa_female
    )
  vParamBool: |-
    (?x:
        opinion_effect
    |   cooldown
    |   move
    |   hidden
    |   inherit
    |   crime
    |   stacking
    |   disable_non_aggression_pacts
    |   is_religious
    |   same_religion
    |   is_crusade
    |   as_if_liege
    |   random
    |   customizer
    |   can_be_usurped
    |   can_be_claimed
    |   offmap
    |   historical
    )
  vCBParamTier: (?:check_de_jure_tier)
  vCBParamInt: |-
    (?x:
        sprite
    |   truce_days
    )
  vCBParamNumber: |-
    (?x:
        max_attacker_occupation_score
    |   max_defender_occupation_score
    |   max_attacker_battle_score
    |   max_defender_battle_score
    |   battle_warscore_mult
    |   infamy_modifier
    |   att_ticking_war_score_multiplier
    |   def_ticking_war_score_multiplier
    )
  vCBParamBool: |-
    (?x:
        is_permanent
    |   hostages_block_cb
    |   capturing_attacker_is_complete_victory
    |   capturing_defender_is_complete_victory
    |   other_de_jure_claim
    |   check_all_titles
    |   check_all_trade_posts
    |   attacker_rel_head_is_ally
    |   hostile_against_others
    |   can_call_allies
    |   attacker_can_call_allies
    |   defender_can_call_allies
    |   can_ask_to_join_war
    |   apply_short_occ_mod
    |   press_claim
    |   can_call_vassals
    |   major_revolt
    |   is_holy_war
    |   allowed_to_target_tributaries
    |   allow_distant
    |   allow_whitepeace
    |   is_claim_all
    |   is_independence
    |   is_tyranny_cb
    |   is_revolt_cb
    |   can_attack_vassals
    |   reflect_titleholder_change
    |   display_on_map
    |   attacker_unoccupied_warscore
    |   defender_unoccupied_warscore
    )
  vCBParamTextID: |-
    (?x:
        name
    |   war_name
    )
  vScope: |-
    (?x:
      attacker
    | band_creator
    | best_crusade_claimant
    | betrothed
    | biggest_realm_size_relative
    | blood_brother
    | capital_holding
    | capital_scope
    | center_flank_leader
    | clan_title
    | consort
    | controller
    | county
    | crownlaw_title
    | crusade_target
    | culture_scope
    | current_heir
    | defacto_liege_title
    | defender
    | dejure_liege_title
    | duchy
    | dynasty_head
    | educator
    | empire
    | employer
    | enemy
    | family_palace
    | father
    | father_even_if_dead
    | father_of_unborn
    | governor
    | governor_title
    | guardian
    | heir_under_primogeniture_law
    | heir_under_seniority_law
    | highest_ranked_relative
    | holder_scope
    | host
    | invasion_target
    | job_chancellor
    | job_marshal
    | job_spiritual
    | job_spymaster
    | job_treasurer
    | killer
    | kingdom
    | leader
    | left_flank_leader
    | liege
    | liege_before_war
    | location
    | lover
    | mercenary_employer
    | most_participating_attacker
    | most_participating_crusader
    | most_participating_defender
    | most_popular_vassal
    | most_prestigious_clan_vassal
    | mother
    | mother_even_if_dead
    | new_artifact
    | new_character
    | new_title
    | offmap_power
    | owner
    | parent_religion_head
    | player_heir
    | plot_target_char
    | plot_target_province
    | plot_target_title
    | preferred_war_target
    | primary_title
    | quest_target
    | realm
    | real_father
    | real_father_even_if_dead
    | regent
    | reincarnation_scope
    | religion_head
    | religion_scope
    | right_flank_leader
    | rightful_religious_head_scope
    | ruler
    | sea_zone
    | secret_religion_scope
    | siege
    | society_plot
    | spouse
    | spouse_even_if_dead
    | strongest_clan_vassal
    | succ_law_title
    | supported_claimant
    | supported_claimant_title
    | suzerain
    | thirdparty_title_scope
    | title_to_get_rid_of
    | top_liege
    | trade_post_owner
    | true_religion_scope
    )


contexts:
  main:
    - match: '#.*'
      scope: comment.line.number-sign.ck2script
    - match: '\b({{vTriggerEffectQString}})\s*=\s*("[^"\r\n]*")'
      captures:
        1: support.function.ck2script
        2: string.quoted.double.ck2script
    - match: '"'
      scope: punctuation.definition.string.begin.ck2script
      push:
        - meta_scope: string.quoted.double.ck2script
        - match: '"'
          scope: punctuation.definition.string.end.ck2script
          pop: true
        - match: \n
          scope: invalid.illegal.newline.ck2script
        - match: \\.
          scope: invalid.illegal.escape.ck2script
    - match: \{
      push: braces
    - match: \}
      scope: invalid.illegal.stray-bracket-end
    - match: \b(id)\s*=\s*(((\w+)\.)?(0|([1-9][0-9]*)))\b
      captures:
        1: keyword.control.ck2script
        2: entity.function.name
        # 4: some scope for namespaces or identifiers (entity.name... ?)
        5: constant.numeric.integer.ck2script
    - match: (?<!\w)\-?[0-9]*\.\-?[0-9]*\.\-?[0-9]*\b
      scope: constant.other.date.ck2script
    - match: (?<!\w)\-?([0-9]+\.)?[0-9]+\b
      scope: constant.numeric.double.ck2script
    - match: '\b(clear(?:_global)?_event_target|save(?:_global)?_event_target_as)\s*=\s*({{vStrictID}})\b'
      captures:
        1: keyword.control.ck2script
        2: variable.other.ck2script
    - match: '\b{{vOpBool}}\b'
      scope: keyword.operator.logical.ck2script keyword.operator.word.ck2script
      # general common triggers & effects
    - match: '\b({{vTriggerInt}})\s*{{vOpBinary}}\s*({{vLiteralInt}})\b'
      captures:
        1: support.function.ck2script
        2: constant.numeric.integer.ck2script
    - match: '\b({{vTriggerDecimal}})\s*{{vOpBinary}}\s*({{vLiteralDecimal}})\b'
      captures:
        1: support.function.ck2script
        2: constant.numeric.double.ck2script
    - match: '\b({{vTriggerBool}})\s*=\s*(yes)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.boolean.true.ck2script
    - match: '\b({{vTriggerBool}})\s*=\s*(no)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.boolean.false.ck2script
    - match: '\b({{vTriggerTier}})\s*=\s*({{vLiteralTier}})\b'
      captures:
        1: support.function.ck2script
        2: constant.language.enum.tier.ck2script
    - match: '\b({{vTriggerDate}})\s*{{vOpBinary}}\s*({{vLiteralDate}})\b'
      captures:
        1: support.function.ck2script
        2: constant.other.date.ck2script
    - match: '\b(holding_type)\s*=\s*({{vLiteralHoldingType}})\b'
      captures:
        1: support.function.ck2script
        2: constant.language.enum.holding_type.ck2script
    - match: '\b({{vTriggerTarget}})\s*=\s*({{vEventTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.other.ck2script
    - match: '\b({{vTriggerTarget}})\s*=\s*({{vLangRHSTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.language.ck2script
    - match: '\b({{vTriggerTitleID}})\s*=\s*({{vTitleID}})\b'
      captures:
        1: support.function.ck2script
        2: variable.other.ck2script
    - match: '\b({{vTriggerOffmapID}})\s*=\s*({{vOffmapID}})\b'
      captures:
        1: support.function.ck2script
        2: variable.other.ck2script
    - match: '\b(dynasty)\s*=\s*(none|father_bastard|mother_bastard|random|culture|actually_culture)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.ck2script
    - match: '\b(set_father|set_mother)\s*=\s*(0)\b'
      captures:
        1: support.function.ck2script
        2: constant.numeric.ck2script
    - match: '\b({{vEffectTarget}})\s*=\s*({{vEventTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.other.ck2script
    - match: '\b({{vEffectTarget}})\s*=\s*({{vLangRHSTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.language.ck2script
    - match: '\b({{vEffectTitleID}})\s*=\s*({{vTitleID}})\b'
      captures:
        1: support.function.ck2script
        2: variable.other.ck2script
    - match: '\b({{vEffectNumber}})\s*=\s*({{vLiteralDecimal}})\b'
      captures:
        1: support.function.ck2script
        2: constant.numeric.ck2script
    - match: '\b({{vEffectBool}})\s*=\s*(yes)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.boolean.true.ck2script
    - match: '\b({{vEffectBool}})\s*=\s*(no)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.boolean.false.ck2script
    - match: '\b(end_war)\s*=\s*(invalid|reverse_demand|success|whitepeace)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.enum.end_war.ck2script
    - match: '\b({{vEffectID}}|{{vTriggerID}})\s*=\s*({{vID}})\b'
      captures:
        1: support.function.ck2script
        2: variable.identifier.ck2script
    - match: '\b({{vParamNumber}})\s*{{vOpBinary}}\s*({{vLiteralDecimal}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: variable.identifier.ck2script
    - match: '\b({{vCBParamTier}})\s*=\s*({{vLiteralTier}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: constant.language.enum.tier.ck2script
    - match: '\b({{vCBParamInt}})\s*=\s*({{vLiteralInt}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: constant.numeric.ck2script
    - match: '\b({{vCBParamNumber}})\s*=\s*({{vLiteralDecimal}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: constant.numeric.ck2script
    - match: '\b({{vCBParamBool}})\s*=\s*(yes)\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: constant.language.boolean.true.ck2script
    - match: '\b({{vCBParamBool}})\s*=\s*(no)\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: constant.language.boolean.false.ck2script
    - match: '\b({{vParamBool}})\s*=\s*(yes)\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: constant.language.boolean.true.ck2script
    - match: '\b({{vParamBool}})\s*=\s*(no)\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: constant.language.boolean.false.ck2script
    - match: '\b({{vCBParamTextID}})\s*=\s*({{vTextID}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: variable.identifier.ck2script
    - match: '\b({{vParamTextID}})\s*=\s*({{vTextID}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: variable.identifier.ck2script
    - match: '\b({{vParamID}})\s*=\s*({{vStrictID}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: variable.identifier.ck2script
    - match: '\b{{vEventTarget}}\b'
      scope: variable.other.ck2script
    - match: '\b{{vLangTarget}}\b'
      scope: variable.language.ck2script
    - match: '\b{{vTitleID}}\b'
      scope: variable.other.ck2script
    - match: \bc_\d+\b # character scope, not a title; integer is character ID
      scope: variable.other.ck2script
    - match: '\b{{vScope}}\b'
      scope: keyword.control.ck2script
    - match: '\b{{vOffmapID}}\b'
      scope: variable.other.ck2script
    - match: '\b{{vLiteralMisc}}\b'
      scope: constant.language.ck2script
    - match: '\b{{vLiteralTier}}\b'
      scope: constant.language.enum.tier.ck2script
    - match: \byes\b
      scope: constant.language.boolean.true.ck2script
    - match: \bno\b
      scope: constant.language.boolean.false.ck2script
      # >>>> hereafter, these are the wild untamed lands of free-form match rules that really need shit done about them >>>>
    - match: \b(tooltip|hidden_tooltip|hidden_trigger|hidden_effect)\b
      scope: keyword.other.tooltip.ck2script
    - match: \b(custom|conditional)_tooltip\b
      scope: keyword.control.ck2script
    - match: \b(if|else|else_if|trigger_switch|limit|on_trigger|while|break|show_scope_change|generate_tooltip)\b
      scope: keyword.control.ck2script
    - match: \b((mult_)?modifier|modifier|additive_modifier|additive_power_diff_modifier|additive_opinion_modifier|additive_compared_realm_size_modifier|additive_realm_size_modifier)\b
      scope: keyword.control.ck2script
      # these are the names of parameters for numerous triggers & effects which have multiple named parameters possible
    - match: \b(target|type|target_type|who|where|which|amount|value|count|attribute|percentage|authority|duration|days|months|years|status|chance|factor|casus_belli|tier|thirdparty_title|infamy|first|second|enemy|title|as_if_allied_to|to|min|max|multiplier)\b
      scope: keyword.control.ck2script
      # types of "events" (repeat_event is strictly a command and not also an actual event type)
    - match: \b((character|long_character|narrative|letter|diploresponse|province|unit|repeat|society_quest)_event)\b
      scope: keyword.control.ck2script
      # top-level event context flags/paramters:
    - match: \b(((show_(ROOT|root))|(hide_(window|from|FROM|new))|(show(_from|_FROM){2,4})))\b
      scope: keyword.control.ck2script
    - match: \b(is_triggered_only|major|desc|is_friendly|picture|border|title|notification)\b
      scope: keyword.control.ck2script
      # event pre-triggers
    - match: \b(only_(independent|playable|rulers|capable|men|women)|capable_only|is_patrician|is_sick|ai|war|is_married|has_character_flag|has_global_flag|has_flag)\b
      scope: keyword.control.ck2script
    - match: \b(friends|rivals|has_dlc|lacks_dlc|is_part_of_plot|is_in_society|prisoner|min_age|max_age|religion|religion_group|culture|culture_group)\b
      scope: keyword.control.ck2script
      # top-level event effect blocks (well, `name` is in the `option` block)
    - match: \b(immediate|option|after|desc|title|name)\b
      scope: keyword.control.ck2script
      # triggers that open a block for parameters (for most part)
    - match: \b(((reverse_)?(remove_)?opinion)|((reverse_)?has_opinion_modifier)|opinion_diff|their_opinion|personal_opinion|religion_authority|add_{{vEventModifierType}}_modifier|remove_{{vEventModifierType}}_modifiers)\b
      scope: keyword.control.ck2script
    - match: \b(((reverse_)?realm_levy_diff)|num_of_trade_post_diff|create_(title|character|artifact|(random_(soldier|priest|steward|diplomat|intriguer))))\b
      scope: keyword.control.ck2script
    - match: '\bhad_({{vFlagType}})_flag\b'
      scope: keyword.control.ck2script
      # create_title
    - match: \b(create_title|landless|nomad|adventurer|army_template|rebel|temporary|mercenary|replace_captain_on_death|siphons_income_to_creator|custom_created|base_title|copy_title_laws|ruler|ruler_female|foa)\b
      scope: support.function.ck2script
    - match: \b(province|home|owner|cannot_inherit|disband_on_peace|reinforces|maintenance_multiplier|match_character|merge|can_toggle_looting|is_looter)\b
      scope: support.function.ck2script
    - match: \b(troops|spawn_fleet|spawn_unit|scaled_with_population_of|archers|light_infantry|heavy_infantry|pikemen|knights|light_cavalry|horse_archers|war_elephants|galleys)\b
      scope: keyword.control.ck2script
    - match: \b(age|random_traits|female)\b
      scope: support.function.ck2script
    - match: \b(attributes|diplomacy|martial|stewardship|intrigue|learning)\b
      scope: keyword.control.ck2script
    - match: \b(((check|change|subtract|multiply|divide|export_to|set)_variable)|is_variable_equal|attribute_diff|age_diff)\b
      scope: keyword.control.ck2script
    - match: \b(has_game_rule|artifact_type|secret_religion(_group)?|true_religion(_group)?|religion(_group)?|culture(_group)?)\b
      scope: keyword.control.ck2script
    - match: \b(has_regiments|holds_favor_on|owes_favor_to|faction_power)\b
      scope: keyword.control.ck2script
    - match: \b(is_quest_target|rank|society|plot_power|can_swap_job_title|killer|has_disease|distance)\b
      scope: keyword.control.ck2script
      # general scopes ( ideally would be a different color )
    - match: \b((any_(direct_)?de_jure_vassal_title)|any_de_jure_liege_title|any_title_under|((any|random)_(demesne|realm)_(title|province))|((any|random)_province_holding)|((any|random)_neighbor_province))\b
      scope: keyword.control.ck2script
      # these scopes all have any & random versions
    - match: \b(((any|random)_(society_member|tributary|pupil|artifact|player|character|rival|consort|trade_post|friend|voter|ward|opinion_modifier_target|non_aggression_pact_character|lover|((un)?known_)?enemy_plotter|close_relative|backed_character|landed_title|claim|potential_tribal_county|(neighbor_)?province))|((any|random)_(child|spouse|sibling|dynasty_member)(_even_if_dead)?))\b
      scope: keyword.control.ck2script
      # these scopes all have any & random versions -- unit scopes
    - match: \b(any|random)_(army|fleet|unit)\b
      scope: keyword.control.ck2script
      # these scopes only have any_ versions (no random_); might want to have a slightly different saturation or something for these when highlighting, kinda like the multi-scopes that exclude ROOT
    - match: \bany_(war|claimant|attacker|defender|de_jure_vassal|faction_backer|favor_(holder|ower)|known_plotter|liege|plot_backer|plotter|previous_holder|suzerain|unique_dynasty_vassal|title|heir_title|mercenary_band|pretender_title|trade_route_province)\b
      scope: keyword.control.ck2script
      # scopes that exclude ROOT
    - match: \b((any|random)_province_(character|lord)|((any|random)_courtier(_or_vassal)?)|(any|random)_host_courtier|((any|random)_realm_(lord|character))|(any|random)_current_enemy|(any|random)_vassal|(any|random)_dynasty_member|(any|random)_(independent|playable)_ruler)\b
      scope: keyword.control.ck2script
      # top-level event trigger blocks
    - match: \b(trigger|major_trigger)\b
      scope: keyword.control.ck2script
      # LANDED_TITLES
    - match: \b(color2?|((graphical_)?culture)|religion|capital|foa|pirate|tribe|location_ruler_title|controls_religion|(title(_female)?)|dynasty_title_names|short_name|name_tier|landless|primary|dignity|caliphate|creation_requires_capital)\b
      scope: keyword.control.ck2script
    - match: \b(monthly_income|coat_of_arms|data|mercenary_type|assimilate|((fe)?male_names)|allow|gain_effect|mercenary|independent)\b
      scope: keyword.control.ck2script
      # CUSTOMIZABLE_LOCALISATION
    - match: \b(defined_text|text|localisation_key|fallback_text)\b
      # ON_ACTIONS & JOB_ACTIONS:
    - match: \b(events)\b
      scope: keyword.control.ck2script
      # FUTURE DECISION/LAW CONTEXT:
    - match: \b(decisions|title_decisions|settlement_decisions|vassal_decisions|targett?ed_decisions|plot_decisions|society_decisions)\b # top-level
      scope: keyword.control.ck2script
    - match: \b(filter|ai_target_filter)\s*=\s*({{vTargetedDecisionFilter}}|{{vTitleDecisionFilter}}|{{vSettlementDecisionFilter}})\b
      captures:
        1: keyword.control.ck2script
        2: constant.language.enum.decision_filter.ck2script
    - match: '\b({{vDecisionPropertyBool}})\s*=\s*(yes)\b'
      captures:
        1: keyword.control.ck2script
        2: constant.language.boolean.true.ck2script
    - match: '\b({{vDecisionPropertyBool}})\s*=\s*(no)\b'
      captures:
        1: keyword.control.ck2script
        2: constant.language.boolean.false.ck2script
    - match: '\b({{vDecisionPropertyInt}})\s*=\s*(\d+)\b'
      captures:
        1: keyword.control.ck2script
        2: constant.numeric.ck2script
    - match: \b(allow|potential|from_potential|revoke_allowed)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(effect|pass_effect)\b # effects
      scope: keyword.control.ck2script
    - match: \b(ai_will_do|ai_will_revoke)\b # modifier sets
      scope: keyword.control.ck2script
      # FUTURE MINOR TITLE / RELIGIOUS TITLE CONTEXT:
    - match: \b(allowed_to_grant|allowed_to_hold|revoke_trigger)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(gain_effect|lose_effect|retire_effect)\b # effects
      scope: keyword.control.ck2script
    - match: \bai_will_do\b # modifier sets
      scope: keyword.control.ck2script
      # FUTURE JOB TITLE CONTEXT:
    - match: \b(allow|dismiss_trigger)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(gain_effect|lose_effect|retire_effect)\b # effects
      scope: keyword.control.ck2script
      # FUTURE CB CONTEXT:
    - match: \b((can_use(_(title|gui))?)|(is_valid(_title)?))\b # trigger blocks
      scope: keyword.control.ck2script
    - match: \b((on_(add|success|fail|reverse_demand)(_(title|posttitle))?)|on_invalidation|on_(attacker|defender)_leader_death)\b # effect blocks
      scope: keyword.control.ck2script
    - match: \b(((attacker|defender)_ai_(victory|defeat)_worth)|ai_will_do)\b # modifier blocks
      scope: keyword.control.ck2script
      # TODO: FUTURE CONTEXT OF JOB ACTIONS, AMBITIONS, PLOTS, FOCUSES, FACTIONS, LANDED_TITLES, COUNCIL_VOTING, TRAITS,
      #       COUNCIL_POSITIONS, GOVERNMENTS, ([LONG_]CHARACTER|LETTER|NARRATIVE|PROVINCE|UNIT|DIPLORESPONSE)_EVENT, ...
    - match: \b(target_potential|player_allow|allow_join|success|abort|abort_effect|creation_effect)\b # plot trigger blocks
      scope: keyword.control.ck2script
    - match: \b(vassal_rank_plot|military_plot|intrigue_plot|murder_plot|vassal_intrigue_plot)\b # plot types
      scope: keyword.control.ck2script
    - match: \bis_visible\b # trait and event modifier trigger block
      scope: keyword.control.ck2script
      # random stuff not covered above [yet]:
    - match: \b(mean_time_to_happen|weight_multiplier|chance|membership|ai_chance)\b # modifier sets
      scope: keyword.control.ck2script
    - match: \b(random|random_list)\b # effects w/ modifier sets
      scope: keyword.control.ck2script

  braces:
    - match: \}
      pop: true
    - include: main
