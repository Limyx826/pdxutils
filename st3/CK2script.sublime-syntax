%YAML 1.2
---
name: CK2script
file_extensions:
  - gfx
  - gui
scope: source.ck2script
first_line_match: -\*- ck2(\.\w[\w\.]*)? -\*-

variables:
  vOpBool: |-
    (?xi:
      N?AND
    | NO(?:T|R)
    | OR
    | calc_true_if
    )
  vOpBinary: '(?x: ==? | >=? | <=? )'
  vLiteralBool: '(?:yes|no)'
  vLiteralMisc: '(?:none|public|true|secret)'
  vLiteralInt: '(?:[-]?\d+)'
  vLiteralDecimal: '(?x: [-]? (?: \d* \. \d+ ) | (?: \d+ \. \d*) | \d+ )'
  vLiteralTier: |-
    (?xi:
      BARON
    | COUNT
    | DUKE
    | KING
    | EMPEROR
    )
  vLiteralHoldingType: |-
    (?xi:
      CASTLE
    | TEMPLE
    | CITY
    | TRIBAL
    | NOMAD
    | FAMILY_PALACE
    | TRADE_POST
    | HOSPITAL
    )
  vID: |-
    (?x: [a-zA-Z0-9_-]+ )
  vStrictID: |-
    (?x: [a-zA-Z_] [a-zA-Z0-9_-]* )
  vTextID: |-
    (?x: [^\s";]+ )
  vTitleID: |-
    (?x: [bcdek] _ [a-zA-Z] [a-zA-Z0-9_-]* )
  vEventTarget: |-
    (?x: event_target : {{vStrictID}} )
  vLangTarget: |-
    (?xi:
      (?:ROOT (?: _ (?:FROM){1,4} )? )
    | (?:FROM){1,4}
    | (?:PREV){1,4}
    | THIS
    )
  vLangRHSTarget: |-
    (?xi:
      {{vLangTarget}}
    | LIEGE
    | FATHER
    | MOTHER
    | SPOUSE
    | NEW
    )
  vFlagType: |-
    (?x:
      character
    | province
    | title
    | global
    | artifact
    | dynasty
    )
  vEventModifierType: |-
    (?x:
      character
    | province
    | holding
    )
  vCharEventType: |-
    (?x:
      character_event
    | long_character_event
    | narrative_event
    | letter_event
    | diploresponse_event
    | society_quest_event
    )
  vCharAttr: |-
    (?x:
      diplomacy
    | martial
    | stewardship
    | intrigue
    | learning
    )
  vCharEventPreTriggerBool: |-
    (?x:
      ai
    | capable_only
    | friends
    | is_
      (?:
        in_society
      | married
      | part_of_plot
      | patrician
      | sick
      )
    | only_
      (?:
        capable
      | independent
      | playable
      | rulers
      | men
      | women
      )
    | rivals
    | war
    )
  vCharEventPreTriggerInt: '(?x: m(?:in|ax) _age )'
  vCharEventPropertyBool: |-
    (?x:
      hide_
        (?:
          from
        | new
        | window
        )
    | is_
      (?:
        triggered_only
      | friendly
      | hostile
      )
    | major
    | notification
    | show_
      (?:
        root
      | from_from (?:_from)?
      )
    | triggered_from_code
    )
  vTriggerTier: |-
    (?x:
      higher_real_tier_than
    | higher_tier_than
    | lower_real_tier_than
    | lower_tier_than
    | real_tier
    | tier
    )
  vTriggerInt: |-
    (?x:
      age
    | ai_ambition
    | ai_greed
    | ai_honor
    | ai_rationality
    | ai_zeal
    | among_most_powerful_vassals
    | character
    | combat_rating
    | day_of_birth
    | dynasty
    | hospital_level
    | killer
    | month
    | month_of_birth
    | num_fitting_characters_for_title
    | num_of_baron_titles
    | num_of_duke_titles
    | num_of_emperor_titles
    | num_of_king_titles
    | num_of_buildings
    | num_of_children
    | num_of_claims
    | num_of_consorts
    | num_of_count_titles
    | num_of_count_titles_in_realm
    | num_of_dynasty_members
    | num_of_empty_holdings
    | num_of_extra_landed_titles
    | num_of_feuds
    | num_of_friends
    | num_of_holy_sites
    | num_of_lovers
    | num_of_max_settlements
    | num_of_plot_backers
    | num_of_prisoners
    | num_of_rivals
    | num_of_settlements
    | num_of_spouses
    | num_of_subrealm_castles
    | num_of_subrealm_cities
    | num_of_symptoms
    | num_of_trade_posts
    | num_of_traits
    | num_of_unique_dynasty_vassals
    | num_of_vassals
    | piety
    | prestige
    | province_id
    | realm_size
    | ruled_years
    | society_rank
    | war_score
    | wealth
    | year
    | {{vCharAttr}}
    )
  vTriggerDecimal: |-
    (?x:
      base_health
    | health
    | relative_income_to_liege
    | relative_power
    | relative_power_to_liege
    | religion_authority
    | scaled_piety
    | scaled_prestige
    | scaled_wealth
    | dynasty_realm_power
    )
  vTriggerTitleID: |-
    (?x:
    | de_facto_liege
    | de_facto_liege_title
    | de_jure_liege_or_above
    | de_jure_liege
    | de_jure_vassal_or_below
    | has_landed_title
    )
  vTriggerTarget: |-
    (?x:
      can_marry
    | character
    | claimed_by
    | conquest_culture
    | culture
    | culture_group
    | de_facto_liege
    | de_facto_liege_title
    | de_jure_liege
    | de_jure_liege_or_above
    | de_jure_vassal_or_below
    | dynasty
    | family
    | has_blood_oath_with
    | has_claim
    | has_landed_title
    | has_non_aggression_pact_with
    | has_truce
    | has_strong_claim
    | has_weak_claim
    | held_title_rating
    | higher_real_tier_than
    | higher_tier_than
    | holder
    | is_allied_with
    | is_allowed_holding_type
    | is_child_of
    | is_close_relative
    | is_consort
    | is_father
    | is_foe
    | is_friend
    | is_heresy_of
    | is_holy_site
    | is_liege_of
    | is_liege_or_above
    | is_lover
    | is_married
    | is_mother
    | is_parent_religion
    | is_preferred_holding_type
    | is_primary_heir
    | is_quest_target_of
    | is_reformed_religion
    | is_rival
    | is_valid_viking_invasion_target
    | is_vassal_or_below
    | is_within_diplo_range
    | lower_real_tier_than
    | lower_tier_than
    | overlord_of
    | pays_tribute_to
    | province
    | province_id
    | real_tier
    | religion
    | religion_group
    | reverse_has_truce
    | same_liege
    | same_realm
    | secret_religion
    | secret_religion_group
    | sibling
    | tier
    | title
    | true_religion
    | true_religion_group
    | vassal_of
    | war_title
    | war_with
    )
  vTriggerBool: |-
    (?x:
      adventurer
    | ai
    | always
    | best_de_jure_liege_title_holder_FROM
    | best_de_jure_liege_title_holder_ROOT
    | best_de_jure_liege_title_holder_target_ruler
    | best_de_jure_liege_title_under_FROM
    | best_de_jure_liege_title_under_ROOT
    | best_de_jure_liege_title_under_target_ruler
    | borders_major_river
    | borders_lake
    | can_call_crusade
    | can_change_religion
    | can_marry
    | controls_religion
    | clan
    | has_autocephaly
    | has_epidemic
    | has_game_started
    | has_guardian
    | has_holder
    | has_hospital
    | has_inheritance_blocker
    | has_job_title
    | has_lover
    | has_nickname
    | has_owner
    | has_raised_standing_troops
    | has_regent
    | has_secret_religion
    | has_siege
    | has_trade_post
    | holy_order
    | immortal
    | in_command
    | in_revolt
    | in_seclusion
    | independent
    | is_adult
    | is_alive
    | is_allowed_to_loot
    | is_attacker
    | is_capital
    | is_consort
    | is_contested
    | is_conquered
    | is_councillor
    | is_de_jure_title
    | is_dying
    | is_father_real_father
    | is_female
    | is_feudal
    | is_heir
    | is_heretic
    | is_incapable
    | is_ill
    | is_land
    | is_landed
    | is_landless_type_title
    | is_marriage_adult
    | is_married
    | is_merchant_republic
    | is_multiplayer_host_character
    | is_nomadic
    | is_occupied
    | is_patrician
    | is_pregnant
    | is_primary_heir
    | is_primary_holder_title
    | is_primary_holder_title_tier
    | is_primary_type_title
    | is_primary_war_attacker
    | is_primary_war_defender
    | is_pregnant
    | is_pretender
    | is_playable
    | is_plot_active
    | is_recent_grant
    | is_reformed_religion
    | is_republic
    | is_ruler
    | is_save_game
    | is_theocracy
    | is_titular
    | is_tribal
    | is_tribal_type_title
    | is_tributary
    | is_vice_royalty
    | is_voter
    | mercenary
    | multiplayer
    | owner_under_FROM
    | owner_under_FROMFROM
    | owner_under_PREV
    | owner_under_PREVPREV
    | owner_under_PREVPREVPREV
    | owner_under_ROOT
    | owner_under_target_ruler
    | pacifist
    | port
    | preparing_invasion
    | prisoner
    | rebel
    | religion_allows_female_temple_holders
    | temporary
    | under_FROM
    | under_FROMFROM
    | under_PREV
    | under_PREVPREV
    | under_PREVPREVPREV
    | under_ROOT
    | under_target_ruler
    | war
    )
  vTriggerID: |-
    (?x:
      can_hold_title
    | continent
    | controls_religion
    | culture
    | culture_group
    | death_reason
    | disease
    | government
    | has_{{vEventModifierType}}_modifier
    | has_{{vFlagType}}_flag
    | has_ambition
    | has_any_building
    | has_any_opinion_modifier
    | has_assigned_minor_title
    | has_building
    | has_earmarked_regiments
    | has_focus
    | has_job_title
    | has_law
    | has_minor_title
    | has_nickname
    | has_plot
    | has_quest
    | has_secret_religion
    | in_faction
    | is_decision_allowed
    | is_decision_potential
    | is_government_allowed
    | is_government_potential
    | is_law_allowed
    | is_law_potential
    | leads_faction
    | region
    | religion
    | religion_group
    | secret_religion
    | secret_religion_group
    | society_member_of
    | terrain
    | trait
    | true_religion
    | true_religion_group
    | using_cb
    )
  vEffectNumber: |-
    (?x:
      change_{{vCharAttr}}
    | participation_scaled_decadence
    | participation_scaled_piety
    | participation_scaled_prestige
    | piety
    | prestige
    | scaled_piety
    | scaled_prestige
    | scaled_wealth
    | treasury
    | wealth
    )
  vEffectTarget: |-
    (?x:
      abdicate_to
    | abdicate_to_most_liked_by
    | add_claim
    | add_favor
    | add_pressed_claim
    | add_weak_cleam
    | add_weak_pressed_claim
    | banish
    | clear_wealth
    | conquest_culture
    | de_jure_liege
    | force_host
    | gain_title
    | grant_title
    | grant_title_no_opinion
    | impregnate
    | imprison
    | move_character
    | occupy_minors_of_occupied_settlements
    | press_claim
    | remove_claim
    | remove_consort
    | remove_favor
    | remove_lover
    | remove_tributary
    | reverse_add_favor
    | reverse_banish
    | reverse_remove_favor
    | usurp_title
    | usurp_title_only
    | usurp_title_plus_barony_if_unlanded
    | usurp_title_plus_barony_if_unlanded_and_vassals
    | usurp_title_plus_barony_if_unlanded_and_vassals_no_adj
    )
  vEffectBool: |-
    (?x:
      abdicate
    | ambition_succeeds
    | banish
    | clear_wealth
    | diplomatic_immunity
    | impregnate
    | plot_succeeds
    | remove_guardian
    | reveal_plot
    | reveal_plot_w_message
    )
  vEffectID: |-
    (?x:
      add_law
    | add_law_w_cooldown
    | add_trait
    | cancel_plot
    | clear_flags_with_prefix
    | clr_{{vFlagType}}_flag
    | disband_event_forces
    | give_nickname
    | pass_law
    | remove_{{vEventModifierType}}_modifier
    | remove_title
    | remove_trait
    | set_{{vFlagType}}_flag
    | set_name
    )
  vParamID: |-
    (?x:
      death_reason
    | flag
    | modifier
    | name
    | faction
    | border
    | picture
    | value
    )
  vParamTextID: |-
    (?x:
      desc
    | name
    | text
    | war_name
    )
  vScope: |-
    (?x:
      attacker
    | band_creator
    | best_crusade_claimant
    | biggest_realm_size_relative
    | blood_brother
    | capital_holding
    | capital_scope
    | center_flank_leader
    | clan_title
    | consort
    | controller
    | county
    | crownlaw_title
    | crusade_target
    | culture_scope
    | current_heir
    | defacto_liege_title
    | defender
    | dejure_liege_title
    | duchy
    | dynasty_head
    | educator
    | empire
    | employer
    | enemy
    | family_palace
    | father
    | father_even_if_dead
    | father_of_unborn
    | guardian
    | heir_under_primogeniture_law
    | heir_under_seniority_law
    | highest_ranked_relative
    | holder_scope
    | host
    | invasion_target
    | job_chancellor
    | job_marshal
    | job_spiritual
    | job_spymaster
    | job_treasurer
    | killer
    | kingdom
    | left_flank_leader
    | liege
    | liege_before_war
    | location
    | lover
    | mercenary_employer
    | most_participating_attacker
    | most_participating_crusader
    | most_participating_defender
    | most_popular_vassal
    | most_prestigious_clan_vassal
    | mother
    | mother_even_if_dead
    | new_artifact
    | new_character
    | new_title
    | owner
    | parent_religion_head
    | plot_target_char
    | plot_target_province
    | plot_target_title
    | preferred_war_target
    | primary_title
    | quest_target
    | realm
    | real_father
    | real_father_even_if_dead
    | regent
    | reincarnation_scope
    | religion_head
    | religion_scope
    | right_flank_leader
    | rightful_religious_head_scope
    | ruler
    | sea_zone
    | secret_religion_scope
    | siege
    | society_plot
    | spouse
    | spouse_even_if_dead
    | strongest_clan_vassal
    | succ_law_title
    | supported_claimant
    | supported_claimant_title
    | suzerain
    | thirdparty_title_scope
    | title_to_get_rid_of
    | top_liege
    | trade_post_owner
    | true_religion_scope
    )


contexts:
  main:
    - match: '#.*'
      scope: comment.line.number-sign.ck2script
    - match: '"'
      scope: punctuation.definition.string.begin.ck2script
      push:
        - meta_scope: string.quoted.double.ck2script
        - match: '"'
          scope: punctuation.definition.string.end.ck2script
          pop: true
        - match: \n
          scope: invalid.illegal.newline.ck2script
        - match: \\.
          scope: invalid.illegal.escape.ck2script
    - match: \{
      push: braces
    - match: \}
      scope: invalid.illegal.stray-bracket-end
    - match: \b(id)\s*=\s*(((\w+)\.)?(0|([1-9][0-9]*)))\b
      captures:
        1: keyword.control.ck2script
        2: entity.function.name
        # 4: some scope for namespaces or identifiers (entity.name... ?)
        5: constant.numeric.integer.ck2script
    - match: (?<!\w)\-?[0-9]*\.\-?[0-9]*\.\-?[0-9]*\b
      scope: constant.other.date.ck2script
    - match: (?<!\w)\-?([0-9]+\.)?[0-9]+\b
      scope: constant.numeric.double.ck2script
    - match: '\b{{vTitleID}}\b'
      scope: variable.other.ck2script
    - match: \bc_\d+\b # character scope, not a title; integer is character ID
      scope: variable.other.ck2script
    - match: '\b(clear(?:_global)?_event_target|save(?:_global)?_event_target_as)\s*=\s*({{vStrictID}})\b'
      captures:
        1: keyword.control.ck2script
        2: variable.other.ck2script
    - match: '\b{{vOpBool}}\b'
      scope: keyword.operator.logical.ck2script keyword.operator.word.ck2script
    - match: '\b{{vLiteralTier}}\b'
      scope: constant.language.enum.tier.ck2script
    - match: \byes\b
      scope: constant.language.boolean.true.ck2script
    - match: \bno\b
      scope: constant.language.boolean.false.ck2script
    - match: '\b{{vLiteralMisc}}\b'
      scope: constant.language.ck2script
      # general common triggers & effects
    - match: '\b({{vTriggerInt}})\s*{{vOpBinary}}\s*({{vLiteralInt}})\b'
      captures:
        1: support.function.ck2script
        2: constant.numeric.integer.ck2script
    - match: '\b({{vTriggerDecimal}})\s*{{vOpBinary}}\s*({{vLiteralDecimal}})\b'
      captures:
        1: support.function.ck2script
        2: constant.numeric.double.ck2script
    - match: '\b({{vTriggerBool}})\s*=\s*(yes)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.boolean.true.ck2script
    - match: '\b({{vTriggerBool}})\s*=\s*(no)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.boolean.false.ck2script
    - match: '\b({{vTriggerTier}})\s*=\s*({{vLiteralTier}})\b'
      captures:
        1: support.function.ck2script
        2: constant.language.enum.tier.ck2script
    - match: '\b(holding_type)\s*=\s*({{vLiteralHoldingType}})\b'
      captures:
        1: support.function.ck2script
        2: constant.language.enum.holding_type.ck2script
    - match: '\b({{vTriggerTarget}})\s*=\s*({{vEventTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.other.ck2script
    - match: '\b({{vTriggerTarget}})\s*=\s*({{vLangRHSTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.language.ck2script
    - match: '\b({{vTriggerTitleID}})\s*=\s*({{vTitleID}})\b'
      captures:
        1: support.function.ck2script
        2: variable.other.ck2script
    - match: '\b(dynasty)\s*=\s*(none)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.ck2script
    - match: '\b({{vEffectTarget}})\s*=\s*({{vEventTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.other.ck2script
    - match: '\b({{vEffectTarget}})\s*=\s*({{vLangRHSTarget}})\b'
      captures:
        1: support.function.ck2script
        2: variable.language.ck2script
    - match: '\b({{vEffectNumber}})\s*=\s*({{vLiteralDecimal}})\b'
      captures:
        1: support.function.ck2script
        2: constant.numeric.ck2script
    - match: '\b({{vEffectBool}})\s*=\s*(yes)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.boolean.true.ck2script
    - match: '\b(end_war)\s*=\s*(invalid|reverse_demand|success|whitepeace)\b'
      captures:
        1: support.function.ck2script
        2: constant.language.enum.end_war.ck2script
    - match: '\b({{vEffectID}}|{{vTriggerID}})\s*=\s*({{vID}})\b'
      captures:
        1: support.function.ck2script
        2: variable.identifier.ck2script
    - match: '\b({{vParamTextID}})\s*=\s*({{vTextID}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: variable.identifier.ck2script
    - match: '\b({{vParamID}})\s*=\s*({{vStrictID}})\b'
      captures:
        1: support.function.ck2script # should use a different scope for these
        2: variable.identifier.ck2script
    - match: '\b{{vEventTarget}}\b'
      scope: variable.other.ck2script
    - match: '\b{{vLangTarget}}\b'
      scope: variable.language.ck2script
    - match: '\b({{vScope}})\b'
      captures:
        1: keyword.control.ck2script
      # >>>> hereafter, these are the wild untamed lands of free-form match rules that really need shit done about them >>>>
    - match: \b(tooltip|hidden_tooltip|hidden_trigger|hidden_effect)\b
      scope: keyword.other.tooltip.ck2script
    - match: \bcustom_tooltip\b
      scope: keyword.control.ck2script
    - match: \b(if|trigger_switch|limit|on_trigger|while|break)\b
      scope: keyword.control.ck2script
    - match: \b((mult_)?modifier|modifier|additive_modifier|additive_power_diff_modifier|additive_opinion_modifier|additive_compared_realm_size_modifier|additive_realm_size_modifier)\b
      scope: keyword.control.ck2script
      # these are the names of parameters for numerous triggers & effects which have multiple named parameters possible
    - match: \b(target|type|target_type|who|where|which|amount|value|count|attribute|percentage|authority|duration|days|months|years|hidden|inherit|crime|disable_non_aggression_pacts|move|cooldown|status|random|chance|factor|casus_belli|tier|thirdparty_title|infamy|as_if_liege|first|second|enemy|title|is_religious|same_religion|is_crusade|to|min|max|multiplier)\b
      scope: keyword.control.ck2script
    - match: \b(sprite|truce_days|is_permanent|check_all_titles|check_de_jure_tier|hostile_against_others|attacker_can_call_allies|defender_can_call_allies|can_ask_to_join_war|apply_short_occ_mod|press_claim|battle_warscore_mult|infamy_modifier|can_call_vassals|major_revolt|is_holy_war|allowed_to_target_tributaries|allowed_to_target_suzerains|ticking_war_score_multiplier|allow_distant|is_claim_all|is_independence|is_tyranny_cb|is_revolt_cb|can_attack_vassals|reflect_titleholder_change|display_on_map)\b
      scope: keyword.control.ck2script
      # types of "events" (repeat_event is strictly a command and not also an actual event type)
    - match: \b((character|long_character|narrative|letter|diploresponse|province|unit|repeat|society_quest)_event)\b
      scope: keyword.control.ck2script
      # top-level event context flags/paramters:
    - match: \b(((show_(ROOT|root))|(hide_(window|from|FROM|new))|(show(_from|_FROM){2,4})))\b
      scope: keyword.control.ck2script
    - match: \b(is_triggered_only|major|desc|is_friendly|picture|border|title|notification)\b
      scope: keyword.control.ck2script
      # event pre-triggers
    - match: \b(only_(independent|playable|rulers|capable|men|women)|capable_only|is_patrician|is_sick|ai|war|is_married|has_character_flag|has_global_flag|has_flag)\b
      scope: keyword.control.ck2script
    - match: \b(friends|rivals|has_dlc|lacks_dlc|is_part_of_plot|is_in_society|prisoner|min_age|max_age|religion|religion_group|culture|culture_group)\b
      scope: keyword.control.ck2script
      # top-level event effect blocks (well, `name` is in the `option` block)
    - match: \b(immediate|option|after|desc|title|name)\b
      scope: keyword.control.ck2script
      # triggers that open a block for parameters (for most part)
    - match: \b(((reverse_)?(remove_)?opinion)|((reverse_)?has_opinion_modifier)|opinion_diff|their_opinion|personal_opinion|religion_authority|add_{{vEventModifierType}}_modifier)\b
      scope: keyword.control.ck2script
    - match: \b(((reverse_)?realm_levy_diff)|num_of_trade_post_diff|create_(title|character|artifact|(random_(soldier|priest|steward|diplomat|intriguer))))\b
      scope: keyword.control.ck2script
    - match: '\bhad_({{vFlagType}})_flag\b'
      scope: keyword.control.ck2script
    - match: \b(((check|change|subtract|multiply|divide|export_to|set)_variable)|is_variable_equal|attribute_diff|age_diff)\b
      scope: keyword.control.ck2script
    - match: \b(has_game_rule|artifact_type|secret_religion(_group)?|true_religion(_group)?|religion(_group)?|culture(_group)?)\b
      scope: keyword.control.ck2script
    - match: \b(has_regiments|holds_favor_on|owes_favor_to|faction_power)\b
      scope: keyword.control.ck2script
    - match: \b(is_quest_target|rank|society|plot_power|can_swap_job_title|killer|has_disease|distance)\b
      scope: keyword.control.ck2script
      # general scopes ( ideally would be a different color )
    - match: \b((any_(direct_)?de_jure_vassal_title)|(any_de_jure_liege_title)|((any|random)_(demesne|realm)_(title|province))|((any|random)_province_holding)|((any|random)_neighbor_province))\b
      scope: keyword.control.ck2script
      # these scopes all have any & random versions
    - match: \b(((any|random)_(artifact|player|character|rival|consort|trade_post|friend|voter|ward|opinion_modifier_target|non_aggression_pact_character|lover|((un)?known_)?enemy_plotter|close_relative|backed_character|landed_title|claim|potential_tribal_county|(neighbor_)?province))|((any|random)_(child|spouse|sibling|dynasty_member)(_even_if_dead)?))\b
      scope: keyword.control.ck2script
      # these scopes all have any & random versions -- unit scopes
    - match: \b(any|random)_(army|fleet|unit)\b
      scope: keyword.control.ck2script
      # these scopes only have any_ versions (no random_); might want to have a slightly different saturation or something for these when highlighting, kinda like the multi-scopes that exclude ROOT
    - match: \bany_(war|claimant|attacker|defender|de_jure_vassal|faction_backer|favor_(holder|ower)|known_plotter|liege|plot_backer|plotter|previous_holder|suzerain|unique_dynasty_vassal|title|heir_title|mercenary_band|pretender_title|trade_route_province)\b
      scope: keyword.control.ck2script
      # scopes that exclude ROOT
    - match: \b((any|random)_province_(character|lord)|((any|random)_courtier(_or_vassal)?)|(any|random)_host_courtier|((any|random)_realm_(lord|character))|(any|random)_current_enemy|(any|random)_vassal|(any|random)_dynasty_member|(any|random)_(independent|playable)_ruler)\b
      scope: keyword.control.ck2script
      # top-level event trigger blocks
    - match: \b(trigger|major_trigger)\b
      scope: keyword.control.ck2script
      # LANDED_TITLES
    - match: \b(color2?|((graphical_)?culture)|religion|capital|foa|controls_religion|(title(_female)?)|dynasty_title_names|short_name|name_tier|landless|primary|dignity|caliphate|creation_requires_capital)\b
      scope: keyword.control.ck2script
    - match: \b(monthly_income|coat_of_arms|data|mercenary_type|assimilate|((fe)?male_names)|allow|gain_effect|mercenary|independent|title_prefix)\b
      scope: keyword.control.ck2script
      # CUSTOMIZABLE_LOCALISATION
    - match: \b(defined_text|text|localisation_key)\b
      scope: keyword.control.ck2script
      # FUTURE DECISION/LAW CONTEXT:
    - match: \b(decisions|title_decisions|settlement_decisions|vassal_decisions|targett?ed_decisions|plot_decisions|society_decisions)\b # top-level
      scope: keyword.control.ck2script
    - match: \b(allow|potential|from_potential|revoke_allowed)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(effect|pass_effect)\b # effects
      scope: keyword.control.ck2script
    - match: \b(ai_will_do|ai_will_revoke)\b # modifier sets
      scope: keyword.control.ck2script
      # FUTURE MINOR TITLE / RELIGIOUS TITLE CONTEXT:
    - match: \b(allowed_to_grant|allowed_to_hold|revoke_trigger)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(gain_effect|lose_effect|retire_effect)\b # effects
      scope: keyword.control.ck2script
    - match: \bai_will_do\b # modifier sets
      scope: keyword.control.ck2script
      # FUTURE JOB TITLE CONTEXT:
    - match: \b(allow|dismiss_trigger)\b # triggers
      scope: keyword.control.ck2script
    - match: \b(gain_effect|lose_effect|retire_effect)\b # effects
      scope: keyword.control.ck2script
      # FUTURE CB CONTEXT:
    - match: \b((can_use(_(title|gui))?)|(is_valid(_title)?))\b # trigger blocks
      scope: keyword.control.ck2script
    - match: \b((on_(add|success|fail|reverse_demand)(_(title|posttitle))?)|on_invalidation|on_(attacker|defender)_leader_death)\b # effect blocks
      scope: keyword.control.ck2script
    - match: \b(((attacker|defender)_ai_(victory|defeat)_worth)|ai_will_do)\b # modifier blocks
      scope: keyword.control.ck2script
      # TODO: FUTURE CONTEXT OF JOB ACTIONS, AMBITIONS, PLOTS, FOCUSES, FACTIONS, LANDED_TITLES, COUNCIL_VOTING, TRAITS,
      #       COUNCIL_POSITIONS, GOVERNMENTS, ([LONG_]CHARACTER|LETTER|NARRATIVE|PROVINCE|UNIT|DIPLORESPONSE)_EVENT, ...
    - match: \b(target_potential|player_allow|allow_join|success|abort|abort_effect|creation_effect)\b # plot trigger blocks
      scope: keyword.control.ck2script
    - match: \b(vassal_rank_plot|military_plot|intrigue_plot|murder_plot|vassal_intrigue_plot)\b # plot types
      scope: keyword.control.ck2script
    - match: \bis_visible\b # trait and event modifier trigger block
      scope: keyword.control.ck2script
      # random stuff not covered above [yet]:
    - match: \b(mean_time_to_happen|weight_multiplier|chance|membership|ai_chance)\b # modifier sets
      scope: keyword.control.ck2script
    - match: \b(random|random_list)\b # effects w/ modifier sets
      scope: keyword.control.ck2script

  braces:
    - match: \}
      pop: true
    - include: main
